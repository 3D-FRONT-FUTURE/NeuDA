general {
    base_exp_dir = ./exp/CASE_NAME/neuda_wmask
    recording = [
        ./,
        ./models
    ]
}

dataset {
    data_dir = ./data/DTU/CASE_NAME/
    render_cameras_name = cameras_sphere.npz
    object_cameras_name = cameras_sphere.npz
    loader_mode = image
}

train {
    learning_rate = 5e-4
    learning_rate_alpha = 0.05
    end_iter = 300000 

    batch_size = 512
    validate_resolution_level = 4
    warm_up_end = 5000
    anneal_end = 0 
    use_white_bkgd = False 

    save_freq = 10000 
    val_freq = 10000 
    val_mesh_freq = 10000 
    report_freq = 100

    igr_weight = 0.1
    mask_weight = 0.1
}

model {
    nerf {
        D = 8,
        d_in = 4,
        d_in_view = 3,
        W = 256,
        xyz_encoder {
           type = frequency
           input_dim = 3
           freq = 10
        }
        dir_encoder {
            type = frequency
            input_dim = 3
            freq = 4
        }
        output_ch = 4,
        skips=[4],
        use_viewdirs=True
    }

    sdf_network {
        d_out = 257
        d_in = 3
        d_hidden = 256
        n_layers = 3
        skip_in = []
        xyz_encoder {
            type = deformable_anchor_grid
            input_dim = 3
            n_levels = 8
            base_resolution = 16
            n_features_per_level = 6
            desired_resolution = -1
            b = 1.38
            bbox = [-1.01, -1.01, -1.01, 1.01, 1.01, 1.01]
        }
        bias = 0.5
        scale = 1.0
        geometric_init = True
        weight_norm = True
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_feature = 256
        mode = idr
        d_in = 9
        d_out = 3
        d_hidden = 256
        n_layers = 4
        weight_norm = True
        dir_encoder {
	    type = frequency
            input_dim = 3
            freq = 4
        }
        squeeze_out = True
    }

    neus_renderer {
        n_samples = 64
        n_importance = 64
        n_outside = 0
        up_sample_steps = 4
        perturb = 1.0
    }
}
